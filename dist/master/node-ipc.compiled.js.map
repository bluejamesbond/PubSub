{"version":3,"sources":["node-ipc.es6"],"names":[],"mappings":"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","file":"node-ipc.es6","sourcesContent":["import ipc from 'node-ipc';\nimport Master from '../master.es6';\n\nclass NodeIPC extends Master {\n  constructor(remote, opts = {}) {\n    opts = Object.assign({debug: true, appspace: ''}, opts);\n\n    super(opts.debug);\n\n    this.remote = remote;\n    this.accepted = new Map();\n\n    ipc.config.id = 'socket';\n    ipc.config.retry = 5;\n    ipc.config.maxRetries = 20;\n    ipc.config.networkHost = this.remote ? '0.0.0.0' : '127.0.0.1';\n    ipc.config.maxConnections = 10;\n    ipc.config.appspace = opts.appspace;\n    ipc.config.silent = !this.debug;\n  }\n\n  listen(port, cb = () => 0) {\n    ipc.config.networkPort = port;\n\n    ipc[this.remote ? 'serveNet' : 'serve'](() => {\n      ipc.config.stopRetrying = true; // TODO test corner cases\n\n      ipc.server.on('authorize', (req, socket) => {\n        const origin = socket.id;\n\n        if (this.accepted.has(origin)) {\n          const prevSocket = this.accepted.get(origin);\n\n          if (prevSocket && prevSocket.writable) {\n            socket.__destroyed = true;\n            socket.destroy();\n            return;\n          }\n\n          try {\n            prevSocket.destroy();\n          } catch (e) {\n            // ignore\n          }\n        }\n\n        this.accepted.set(origin, socket);\n      });\n\n      ipc.server.on('deauthorize', (req, socket) => {\n        const origin = socket.id;\n\n        this.accepted.delete(origin);\n\n        for (const [, _socket] of this.accepted.entries()) {\n          if (_socket === socket) {\n            this.log('found another connection', origin);\n            return;\n          }\n        }\n\n        socket.destroy();\n      });\n\n      ipc.server.on('*', (event, req) => {\n        if (event === 'authorize') {\n          return;\n        }\n\n        const origin = req.id;\n\n        if (this.accepted.has(origin)) {\n          this._emit(event, origin, req.data);\n        }\n      });\n\n      ipc.server.on('socket.disconnected', socket => {\n        if (socket.__destroyed) {\n          return;\n        }\n\n        const origin = socket.id;\n\n        this.accepted.delete(origin);\n      });\n\n      ipc.server.on('broadcast-peer', (req, socket) => {\n        const origin = socket.id;\n\n        console.log(req);\n\n        this.broadcast('peer-message', req.data, origin);\n      });\n\n      ipc.server.on('emit-peer', (req, socket) => {\n        const id = req.data.id;\n        const origin = socket.id;\n\n        this.once(`peer-got-${id}`, data => {\n          this.emit(origin, 'peer-received', {...req.data, _data: req.data.data, data: data.data});\n        });\n\n        const dest = req.data.dest;\n\n        req.data.from = req.data.dest;\n\n        delete req.data.dest;\n\n        this.emit(dest, 'peer-message', req.data);\n      });\n\n      ipc.server.on('peer-got', req => {\n        this._emit(`peer-got-${req.data.id}`, req.data);\n      });\n\n      process.nextTick(cb);\n    });\n\n    ipc.server.start();\n  }\n\n  broadcast(channel, data, ...except) {\n    for (const origin of this.accepted.keys()) {\n      if (except.indexOf(origin) > -1) {\n        continue;\n      }\n\n      this.emit(origin, channel, data);\n    }\n  }\n\n  emit(origin, channel, data) {\n    try {\n      if (this.accepted.has(origin)) {\n        const socket = this.accepted.get(origin);\n\n        try {\n          ipc.server.emit(socket, channel, {id: ipc.config.id, origin, data});\n        } catch (e) {\n          console.error(e);\n        }\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }\n}\n\nexport default NodeIPC;\n"]}