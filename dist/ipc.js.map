{"version":3,"sources":["../src/ipc.es6"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;IAEqB;;;AACnB,WADmB,GACnB,GAA0B;QAAd,8DAAQ,oBAAM;;0BADP,KACO;;uEADP,iBACO;;UAQ1B,QAAQ;AACN,oCAAW;AACT,cAAM,IAAI,KAAJ,CAAU,iBAAV,CAAN,CADS;OADL;AAIN,0BAAK,QAAQ,SAAS,MAAM;AAC1B,cAAM,IAAI,KAAJ,CAAU,iBAAV,EAA6B,MAA7B,EAAqC,OAArC,EAA8C,IAA9C,CAAN,CAD0B;OAJtB;AAON,oCAAU,SAAS,MAAM;AACvB,cAAM,IAAI,KAAJ,CAAU,iBAAV,EAA6B,OAA7B,EAAsC,IAAtC,CAAN,CADuB;OAPnB;AAUN,sBAAG,SAAkB;0CAAN;;SAAM;;AACnB,cAAM,IAAI,KAAJ,CAAU,iBAAV,EAA6B,OAA7B,EAAsC,IAAtC,CAAN,CADmB;OAVf;AAaN,0BAAK,SAAkB;2CAAN;;SAAM;;AACrB,cAAM,IAAI,KAAJ,CAAU,iBAAV,EAA6B,OAA7B,EAAsC,IAAtC,CAAN,CADqB;OAbjB;AAgBN,8CAAe,SAAkB;2CAAN;;SAAM;;AAC/B,cAAM,IAAI,KAAJ,CAAU,iBAAV,EAA6B,OAA7B,EAAsC,IAAtC,CAAN,CAD+B;OAhB3B;MARkB;;;AAGxB,UAAK,KAAL,GAAa,KAAb,CAHwB;;AAKxB,UAAK,EAAL,CAAQ,OAAR,EAAiB;aAAO,QAAQ,KAAR,CAAc,GAAd;KAAP,CAAjB,CALwB;;GAA1B;;eADmB;;;;;4BA+BJ;;;yCAAN;;OAAM;;AACb,iDAhCiB,+DAgCI,MAArB,CADa;;;;0BAIF;AACX,UAAI,KAAK,KAAL,EAAY;;;AACd,6BAAQ,GAAR,4BADc;OAAhB;;;;6BAKmB;UAAd,2DAAK;eAAM;OAAN,gBAAS;;AACnB,YAAM,IAAI,KAAJ,CAAU,iBAAV,EAA6B,EAA7B,CAAN,CADmB;;;;+BAIV,OAAO;AAChB,YAAM,IAAI,KAAJ,CAAU,iBAAV,EAA6B,KAA7B,CAAN,CADgB;;;;yBAIb,MAAM,SAAS,MAAM;AACxB,YAAM,IAAI,KAAJ,CAAU,iBAAV,EAA6B,IAA7B,EAAmC,OAAnC,EAA4C,IAA5C,CAAN,CADwB;;;;SAjDP","file":"ipc.es6","sourcesContent":["import EventEmitter from 'events';\n\nexport default class IPC extends EventEmitter {\n  constructor(debug = true) {\n    super();\n\n    this.debug = debug;\n\n    this.on('error', err => console.error(err));\n  }\n\n  Slave = {\n    volatile() {\n      throw new Error('Not implemented');\n    },\n    emit(origin, channel, data) {\n      throw new Error('Not implemented', origin, channel, data);\n    },\n    broadcast(channel, data) {\n      throw new Error('Not implemented', channel, data);\n    },\n    on(channel, ...args) {\n      throw new Error('Not implemented', channel, args);\n    },\n    once(channel, ...args) {\n      throw new Error('Not implemented', channel, args);\n    },\n    removeListener(channel, ...args) {\n      throw new Error('Not implemented', channel, args);\n    }\n  };\n\n  // privatizing emit\n  _emit(...args) {\n    return super.emit(...args);\n  }\n\n  log(...args) {\n    if (this.debug) {\n      console.log(...args);\n    }\n  }\n\n  listen(cb = () => 0) {\n    throw new Error('Not implemented', cb);\n  }\n\n  disconnect(token) {\n    throw new Error('Not implemented', token);\n  }\n\n  emit(dest, channel, data) {\n    throw new Error('Not implemented', dest, channel, data);\n  }\n}\n"]}